---
title: "ENVS-193DS Final"
author: "Wyatt Erickson"
date: 6/10/25
format: 
  html: 
    toc: true # display table of contents
message: false # hide all messages
warning: false # hide all warnings
editor: visual
---

#### Github Repository

<https://github.com/werickson13/ENVS-193DS_spring-2025_final.git>

```{r}
# load packages
library(tidyverse)
library(gt)
library(janitor)
library(lubridate, warn.conflicts = FALSE)
library(scales)
library(ggeffects)
library(MuMIn)
library(DHARMa)

# reading in data
sst <- read.csv("~/Git_/ENVS-193DS_spring-2025_final/Data/SST_update2023.csv")
nest_boxes <- read.csv("~/Git_/ENVS-193DS_spring-2025_final/Data/occdist.csv")
```

## Problem 1. Research Writing

### a. Transparent Statistical Methods

In part one, they used a Pearson's correlation test, as the data points are continuous and correlation was brought up in the description. In part 2, they used a one-way ANOVA test, as they are comparing more than two means by one factor (nitrogen source).

### b. More Information Needed

The first extra test that should be done is an Tukey's HSD test, because the ANOVA (p = 0.02) tells us that there is a significant difference between nitrogen sources, but not which ones are the most different. The Tukey's HSD test would test the differences seen between each nitrogen source, and tell us which groups are actually different (in the form of difference values and confidence interval boundaries), as well as adjusted p-values (for example, p\<0.001) to avoid type one error.

The co-worker could also include analysis of the effect size (η²)which would give context for how much the grouping variable (sources of nitrogen) explains the response variable (average nitrogen load in kg/year).

### c. Suggestions for Rewriting

Part 1: We observed a \[strong, weak\] \[positive, negative\] relationship (Pearson's r = **correlation coefficient**) between distance from headwaters (km) and annual total nitrogen load (kg/year) (t(**degrees of freedom**) = **t value**, p = 0.03, ⍺ = **significance level**).

Part 2: We observed a \[small, medium, large\] difference (η² = **effect size**) in average nitrogen load (kg/year) between sources (urban land, atmospheric deposition, fertilizer, wastewater treatment, and grasslands)(one-way ANOVA, F(**degrees of freedom between groups, degrees of freedom within groups**) = **F value**, p = 0.02, ⍺ = **significance level**). On average, \[source 1\] tended to have less average nitrogen load than \[source 2\] (**mean difference 1** kg/year less, 95% CI: \[**lower bound, upper bound**\] kg/year) and \[source 3\] (**mean difference 2** kg/year less, 95% CI: \[**lower bound, upper bound**\] kg/year).

## Problem 2. Data Visualization

### a. Cleaning and Summarizing

```{r}
sst_clean <- sst |> # use sst data frame
  clean_names() |> # clean up column names
  mutate(year = factor(year(date), # create factor column displaying year
                      levels = c(2018,2019,2020,2021,2022,2023)), # use only these six years
         month = factor(month(date, label = TRUE), # sort by month
                        levels = month.abb, ordered = TRUE))|> # display abbreviated month names
    filter(!is.na(year)) |> # removes data from unwanted years
    group_by(year, month) |> # group year and month columns
    summarise(mean_monthly_sst = mean(temp, na.rm = TRUE)) |>  # calculate mean monthly sst
  ungroup()
slice_sample(sst_clean, n = 5) # show 5 rows of data frame
str(sst_clean) # show data frame structure
```

### b. Visualize the Data

```{r}
ggplot(sst_clean, aes(x = month, # create plot with sst_clean dataframe, x = month
                      y = mean_monthly_sst, # y axis is mean monthly sst
                      group = year, # data grouped in lines by year
                      color = year)) +# lines colored by year
  geom_point(size = 2, shape = 16, alpha = 1) + # add points to visualization
  geom_line(linewidth = 0.7) + # connect points with lines
  labs(
    x = "Month", # set x axis title
    y = "Mean monthly sea surface temperature (°C)", # set y axis title
    color = "Year" # set legend title
  ) +
  scale_color_manual(values = c( # select line colors
    "2018" = "#c6dbef",
    "2019" = "#9ecae1",
    "2020" = "#6baed6",
    "2021" = "#4292c6",
    "2022" = "#2171b5",
    "2023" = "#084594"
  )) +
  theme_bw() + # select theme with border
  theme(
    axis.title.x = element_text(size = 16), # set visualization text sizes
    axis.title.y = element_text(size = 16),
    axis.text.x = element_text(size = 12),
    axis.text.y = element_text(size = 12),
    panel.background = element_blank(),  # remove panel background and grids
    panel.grid.minor = element_blank(),
    panel.grid.major = element_blank(),
    legend.position = c(0.1,0.76), # place legend
    legend.title = element_text(size = 15), # legend text size
    legend.text = element_text(size = 12)
  )
```

## Problem 3. Data Analysis

### a. Response Variable

In this data set, 1s and 0s represent the presence (or absence) of each bird species (swift parrot, common starline, tree martin, or empty). A 1 in a column means "yes" for that observation (for example, a 1 in sp means there was a swift parrot found and a 1 in e means the box was empty) while a 0 in a column means "no" for that observation (for example, a 0 in the cs column means either a species other than the common starling was present, or it was empty.

### b. Purpose of Study

Swift Parrots are a critically endangered species with preferences for specific dimensions for their nests, which are provided by nest boxes that are being taken up by other species. Tree Martins are a native species that take up these nest boxes (but overall are a subordinate competitor) and Common Starlings are an introduced species that compete for nest boxes with Swift Parrots, with anecdotal evidence suggesting they can compete by destroying eggs of the Swift Parrot.

### c. Difference in "seasons"

The first "season" is 2016, and the second "season" is 2019. Since the boxes were placed in 2016, they were brand new to the area during the first season, and for the second season the surrounding wildlife had time to adapt and get used to their presence.

### d. Table of Models

| Model Number | Season | Distance to Forest Edge | Model Description |
|:--:|:--:|:--:|:--:|
| 0 |  |  | no predictors (null model) |
| 1 | X | X | all predictors (saturated model) |
| 2 | X |  | Season predictor only |
| 3 |  | X | Distance to forest edge predictor only |

### e. Run the Models

```{r}
# cleaning and wrangling data for streamlined models
clean_nest_boxes <- nest_boxes |> 
  clean_names() |> # clean column names
  select(sp, edge_distance, season) |> # show columns of interest
  mutate(season = as.factor(season)) # ensure season is a factor and not numeric

model0 <- glm(sp ~ 1, # null model, formula with no predictors
             data = clean_nest_boxes, # use hidden cleaned data frame
             family = binomial) # swift parrot occupancy is binary

model1 <- glm(sp ~ edge_distance + season, #saturated model, use both predictors
              data = clean_nest_boxes, # use cleaned data frame
              family = binomial) # swift parrot occupancy is binary

model2 <- glm(sp ~ season, # use only season predictor
              data = clean_nest_boxes, # use cleaned data frame
              family = binomial) # swift parrot occupancy is binary

model3 <- glm(sp ~ edge_distance, # use only edge distance predictor
              data = clean_nest_boxes, # use cleaned data frame
              family = binomial) # swift parrot occupancy is binary
```

### f. Check the Diagnostics

```{r}
# show residual plots
plot(simulateResiduals(model0)) # residuals for null model
plot(simulateResiduals(model1)) # residuals for saturated model
plot(simulateResiduals(model2)) # residuals for season predictor only model
plot(simulateResiduals(model3)) # residuals for forest distance only model
```

### g. Select the Best Model

```{r}
AICc(model1, # best model: edge distance and season
     model2,
     model3,
     model0) |> 
  arrange(AICc) # arrange output in descending AIC order
```

The best model as determined by Akaike's Information Criterion (AIC) includes how season and distance from the edge of the forest influence the probability of a Swift Parrot occupying a nest box.

### h. Visualize the Model Predictions

```{r}
sp_preds <- ggpredict(
  model1,     # choose which model to use
  terms = c("edge_distance","season")) # select predictors
sp_preds_clean <- sp_preds |> # clean column names
  clean_names() |> 
  rename(season = group)


# code to include observed data for 2016 as underlying data
observations_2016 <- clean_nest_boxes |>   # create new data frame to view data points of interest
  filter(sp == 1, season == "2016")  # only select 2016 observations where swift parrot was present
observations_2016_prob <- ggpredict(model1,    # running observed 2016 distances through model
                 terms = c("edge_distance [715,735,145,105,416,435,355,296,355,392,476,259,277,278,183,218,695,745,48,122,71,190,253,270,228,282,115,114,167]", "season" )) |> # use all observed distances, n = small enough where I can type in each individually
  filter(group == "2016") |> # only include 2016 probabilities, to not plot points that were not seen in the field
  rename(season = group) # rename group column to be included in ggplot


# code to include observed data for 2019 as underlying data
observations_2019 <- clean_nest_boxes |>  # create new data frame
  filter(sp == 1, season == "2019")  # only select 2019 observations where swift parrot was present
observations_2019_prob <- ggpredict(model1,
                  terms = c("edge_distance [774,715,749,97,130,105,529,794,29,253,370,435,392,309,250,731,14,7,141,118]", "season")) |>   # use observed 2019 distances
  filter(group == "2019") |>  # only include 2019 values
  rename(season = group) # rename column to be included

# code for plot creation
ggplot(sp_preds_clean, aes(x = x,   # create plot and define axis as probability and distance from forest edge
                     y = predicted * 100,  # y axis is predicted probability x 100 (% format)
                     color = season, # color by group
                     fill = season)) + # fill color by group
   geom_ribbon(alpha = 0.2, color = NA,
              aes(ymin = conf_low * 100, # confidence interval boundary, adjusted for %
                  ymax = conf_high * 100, # confidence interval boundary, adjusted for %
                  fill = season
                  )) +
   geom_line(size = 1)  + # add line for predictions
   geom_point(data = observations_2016_prob, size = 2, # add circular points for observations
             shape = 16) +
   geom_point(data = observations_2019_prob, size = 2, # add circular points for observations
             shape = 16) +
   labs(
     x = "Distance From the Forest Edge (meters)", # set x axis
     y = "Probability of Swift Parrot Occupying Nest Box (%)", # set y axis
     color = "Season", # set legend title
     fill = "Season" # set legend title
   ) +
   scale_color_manual(values = c(  # set colors for lines and points
    "2016" = "#008000",
    "2019" = "#B7410E")) + 
   scale_fill_manual(values = c(  # set colors for CI ribbon
    "2016" = "#008000",
    "2019" = "#B7410E")) + 
   theme_bw() + # set theme
   theme(  # remove background and panel grids
     panel.background = element_blank(),
     panel.grid = element_blank()
   )
```

### i. Figure Caption

\[Figure 1\]: **Predicted and observed Swift Parrot nest box occupancy in decreasing with season progression and increased distance from forest edge**- Figure shows the predicted probability that a swift parrot will occupy a nesting box (%), calculated from a generalized linear model. Green line represents the predicted probability that a parrot will occupy a box at x meters from the forest edge for the 2016 season, and green circles represent a 2016 observation from the original dataset at that distance from teh forest edge. Orange line represent predicted probability that a parrot will occupy a box at x meters from the forest edge for the 2019 season, and orange circles represent a 2019 observation at that distance from the forest edge. Green and orange shaded ribbons represent 95% confidence interval green and orange lines, respectively. Graph shows that there is a nonlinear negative association between probability of occupation and distance from forest edge. On average, the 2016 season had a higher probability than the 2019 season of swift parrots occupying nesting boxes. Data sourced from Stojanovic, Dejan et al. (2021). Do nest boxes breed the target species or its competitors? A case study of a critically endangered bird \[Dataset\]. Dryad. <https://doi.org/10.5061/dryad.83bk3j9sb>

### j. Calculate Model Predictions

```{r}
sp_preds_j <- ggpredict(  # predict values for 0 and 900m
  model1,
  terms = c("edge_distance [0,900]", "season") # select parameters
)
print(sp_preds_j) # view predicted results
```

### k. Interpret Your Results

In the 2016 season with newly placed nest boxes, the probability of Swift Parrot occupancy (calculated in part j) was 48% \[95% confidence interval: 33%, 6%\] at 0 meters from the forest edge and 12% \[95% confidence interval: 6%, 24%\] at 900 meters from the edge, compared to the 2019 season with a 30% \[95% confidence interval: 18%, 44%\] chance of occupancy at 0 meters and a 6% \[95% confidence interval: 3%, 13%\] chance at 900 meters from the forest edge, meaning that at both 0 meters and 900 meters a Swift Parrot is less likely to occupy a nesting box in 2019 compared to 2016. The predictions made above in Figure 1 show a negative nonlinear association between distance from the forest edge and probability of occupancy, meaning the probability of a Swift Parrot occupying a nest box drops with increasing distance from the forest edge. Models for the common starling showed a similar negative association with probability of occupancy decreasing with increased distance from forest edge, and a model in the original article shows an opposite association for tree marlins. The decrease in swift parrot occupancy from 2016 to 2019 can be explained by trends in the common starling, where they increase their presence in nest boxes once the boxes have sat for a few years. The inverse relationship between swift parrot occupancy and tree marlin occupancy, where the probability of occupancy for tree marlins rises with increasing distance from the forest edge, suggests that the reason swift parrot occupancy drops further into the forest is because many nest boxes are first taken by tree marlins.

## Problem 4. Affective and Exploratory Visualizations

### a. Comparing Visualizations

-   My first exploratory visualization represents mean values for water usage on days of the week through a jitterplot, while my final affective visualization utilizes a simple scatterplot, with volume of water plotted per day along the x-axis. My affective visualization also takes a more artistic approach to the data visualization, where you would need an artist statement to understand what is being represented, while my exploratory visualizations explicitly state what is shown in the figures.

-   All of my visualizations compare all recorded values (at the time) for volume of water used in the trial period, and factor in at-home usage. Also, day of the week is included as a variable in some way in each visualization.

-   While my initial exploratory visualizations contain much less data than my final affective visualization, all visualizations show a higher mean water usage for wednesdays as compared to thursdays. However, the magnitude of this difference is shown to be larger in the initial exploratory visualizations. This is because of the lower n value and higher probability of skewed data points, with the data not yet described as normal by the central limit theorem.

-   While I did not receive feedback during the week 9 workshop, I did have some improvements that I wanted to implement on my final affective visualization, along with my week 10 evaluations. One idea was to re-scale and stretch vertically the line connecting all points in my graph of water usage vs. date, which I did in adobe illustrator, in order to emphasize the differences between data points. Another idea was to add a mean line for each day of the week, but I did not do this because I did not feel like it looked good on the visualization, and wanted to avoid visual clutter.
